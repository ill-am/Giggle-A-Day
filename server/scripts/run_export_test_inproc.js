const fs = require("fs");
const os = require("os");
const path = require("path");
const request = require("supertest");
const app = require("../index");

(async () => {
  try {
    // Ensure in-process initialization (do not bind to network in tests)
    if (typeof app.startServer === "function")
      await app.startServer({ listen: false });

    const postData = {
      title: "Automated PDF Test",
      body: "This PDF was generated by an automated script to test the /export endpoint.",
    };
    const res = await request(app).post("/export").send(postData);

    console.log("Status:", res.status);
    // Use a unique temp directory to avoid collisions in concurrent runs
    const tmpRoot = os.tmpdir();
    const tmpDir = fs.mkdtempSync(path.join(tmpRoot, "aetherpress-"));
    const samplesDir = tmpDir;

    // Save response body if it is a PDF (content-type check)
    const ct = res.headers["content-type"] || "";
    if (ct.includes("application/pdf")) {
      const filename = "automated_export_test_inproc.pdf";
      const out = path.join(samplesDir, filename);
      if (res.body) {
        fs.writeFileSync(out, res.body);
        console.log("Wrote PDF to", out, "size:", fs.statSync(out).size);

        // If running in CI, copy the artifact to a known location inside the repo
        // so workflow steps can easily upload it. We avoid modifying repo files when
        // not in CI by checking env.
        const isCI = !!(process.env.CI || process.env.GITHUB_ACTIONS);
        if (isCI) {
          const artifactsDir = path.resolve(__dirname, "..", "test-artifacts");
          if (!fs.existsSync(artifactsDir))
            fs.mkdirSync(artifactsDir, { recursive: true });
          const target = path.join(artifactsDir, filename);
          fs.copyFileSync(out, target);
          console.log("Copied artifact to", target);
        }
      } else {
        console.warn("No body in response");
      }
    } else {
      console.log("Response content-type:", ct);
      // Save JSON body for inspection
      const out = path.join(samplesDir, "export_request_body.json");
      fs.writeFileSync(out, JSON.stringify(res.body, null, 2));
      console.log("Wrote request/response JSON to", out);
      const isCI = !!(process.env.CI || process.env.GITHUB_ACTIONS);
      if (isCI) {
        const artifactsDir = path.resolve(__dirname, "..", "test-artifacts");
        if (!fs.existsSync(artifactsDir))
          fs.mkdirSync(artifactsDir, { recursive: true });
        const target = path.join(artifactsDir, "export_request_body.json");
        fs.copyFileSync(out, target);
        console.log("Copied artifact to", target);
      }
    }
  } catch (e) {
    console.error("Error during in-process export test:", e);
  }
})();
