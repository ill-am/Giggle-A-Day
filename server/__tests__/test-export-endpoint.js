// test-export-endpoint.js

// Script to automate testing the /export endpoint and saving the PDF
const fs = require("fs");
const http = require("http");

const postData = JSON.stringify({
  title: "Automated PDF Test",
  body: "This PDF was generated by an automated script to test the /export endpoint.",
});

const options = {
  hostname: "localhost",
  port: 3000,
  path: "/export",
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "Content-Length": Buffer.byteLength(postData),
  },
};

const req = http.request(options, (res) => {
  if (res.statusCode !== 200) {
    console.error(`Request failed with status ${res.statusCode}`);
    res.resume();
    return;
  }

  // Implementation following ISSUES_recommend.md #1
  let responseSize = 0;

  res.on("data", (chunk) => {
    responseSize += chunk.length;
  });

  const path = require("path");
  const outputPath = path.resolve(
    __dirname,
    "../../samples/automated_export_test.pdf"
  );
  const file = fs.createWriteStream(outputPath);

  file.on("error", (error) => {
    console.error("File stream error:", error);
    // Explicit error state closure
    if (!file.closed) {
      file.close();
    }
  });

  res.pipe(file);

  file.on("finish", () => {
    console.log(`Response size received: ${responseSize} bytes`);
    // Ensure synchronous closure with callback verification
    if (!file.closed) {
      file.close(() => {
        console.log("File stream explicitly closed after finish");
      });
    }
  });
});

req.on("error", (e) => {
  console.error(`Problem with request: ${e.message}`);
});

req.write(postData);
req.end();
